plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.routdoo'
version = '0.0.1-SNAPSHOT'
apply plugin: 'war'

//외장톰켓을 이용하기 위한 bootWar가 아닌 war로 생성방법
bootWar.enabled = true
war.enabled = true

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	
	all {
		//logback과의 충돌 방지
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
	
	//REDIS
	//implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	
	//시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//testImplementation 'org.springframework.security:spring-security-test'
	
	// apache poi
	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
	// https://mvnrepository.com/artifact/commons-io/commons-io
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
	// https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
	
	// 스웨거
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	
	//jwt 로그인 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
   	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
  	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
  	
  	//websocket 웹소켓
  	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.webjars:stomp-websocket:2.3.4'
	implementation 'org.springframework:spring-messaging:6.0.3'
	implementation 'org.springframework.security:spring-security-messaging:6.0.2'
	
	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'
	//testImplementation 'org.springframework.security:spring-security-test'
	
	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	
	// JUnit5
	// Junit4 제외
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group : 'org.junit.vintage', module : 'junit-vintage-engine' 
    }
    testImplementation("org.junit.platform:junit-platform-launcher:1.5.2") 
	testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslSrcDir = 'src/main/generated'
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslSrcDir))
}
///// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ querydslSrcDir ]
}
clean {
    delete file(querydslSrcDir)
}