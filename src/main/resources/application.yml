spring:
  profiles:
    group:
      local : local,common
      dev : dev,common
      nCloud : nCloud, common
#    active: dev

---
# profiles local
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:mysql://localhost:3306/routdoo?serverTimezone=UTC&characterEncoding=UTF-8
    username: routdoo
    password: routdoo
    tomcat : 
      initial-size : 20
      max-idle : 15
      min-idle : 8
    driver-class-name: com.mysql.cj.jdbc.Driver

globals:
  upload:
    path: C:/temp/upload/dailyRoutine


--- #profile dev 설정
#해당 내용은 dockerfile 실행시에만 주석 제거하자 로컬에서 dev로 기본 설정되는데 해당 datasource가 docker에서 사용하는 거라 에러가 뜰거임
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    #    url: jdbc:mysql://host.docker.internal:3306/routdoo?serverTimezone=UTC&characterEncoding=UTF-8
    #    username: routdoo
    #    password: routdoo
    url : jdbc:mysql://routidoo.cafe24.com:3306/routidoo?serverTimezone=UTC&characterEncoding=UTF-8
    username: routidoo
    password: rout!doo0629
    tomcat:
      initial-size: 20
      max-idle: 15
      min-idle: 8
    driver-class-name: com.mysql.cj.jdbc.Driver


globals:
   upload:
      path: /routidoo/tomcat/webapps/ROOT/upload


---
spring:
  config:
    activate:
      on-profile: nCloud

  datasource:
    url: jdbc:mysql://172.18.0.2:3306/routidoo?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=false
    username: routidoo
    password: routidoo
    tomcat:
      initial-size: 20
      max-idle: 15
      min-idle: 8
    driver-class-name: com.mysql.cj.jdbc.Driver

globals:
  upload:
    path: C:/temp/upload/dailyRoutine

# 공통 환경 설정
---
spring:
  config:
    activate:
      on-profile: common
    
  thymeleaf:
     prefix: classpath:/templates/
     suffix: .html

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
   
#  redis:
#    host: localhost
#    port: 6379
 
 
  jpa:
    open-in-view: false # OSIV 성능 최적화를 위한 false 처리 영속성 컨텍스트 와 db 커넥션의 범위를 조정하여 리소스 낭비를 줄임
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
       # show_sql: true
       # format_sql: true
        default_batch_fetch_size : 500  ## 컬렉션 조회 최적화를 위한 설정


logging:
  config: classpath:log4j2.yml
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: debug  

    
jwt:
  header: Authorization
  secretkey: dailyRoutineroutDooKRauthtokendfi1efj82wl5dkqqinm9q4
  access-token-validity-in-seconds: 3600 # 60 min
  
# 채팅 경로
chat:
  path: http://localhost:8080