# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD github Actions & Docker

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
    # JDK setting - github actions에서 사용할 JDK 설정 (aws 과 project의 java 버전과 별도로 관리)
    - name: Checkout
    - uses: actions/checkout@v3.2.0
    - name: Set up JDK 17
      uses: actions/setup-java@v3.9.0
      with:
        java-version: '17'
        distribution: 'temurin'
        
    ## gradle caching (빌드 시간 줄이기)
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # gradle chmod
    - name: Grant execute permission for gradlew
    - run: chmod +x gradlew

    # gradle build
    - name: Build with Gradle
    - run: ./gradlew clean bootJar
    - run: ls
    - run: ls build
    - run: ls build/libs

    - name: Docker build
      uses: docker/build-push-action@v3.2.0
      with:
          context: .
          file: ./Dockerfile
          push: false
          tags: dailyRoutine:latest
    - run: /usr/bin/docker save -o dailyRoutine.tar dailyRoutine:latest
    
    - name: Send docker image file to test server
      uses: appleboy/scp-action@master
      with:
        host: "115.85.182.23"
        username: ${{ secrets.POSTOFFICE_NAME }}
        password : ${{ secrets.POSTOFFICE_PASS }}
        port: 22
        source: "dailyRoutine.tar"
        target: "/home/dailyRoutine/versions"
    
    - name: Bootup server
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      with:
        host: "115.85.182.23"
        user: ${{ secrets.POSTOFFICE_NAME }}
        pass: ${{ secrets.POSTOFFICE_PASS }}
        port: 22
        connect_timeout: 10s
        first_ssh: |
          docker stop dailyRoutine-test || true
          docker rm dailyRoutine-test || true
          docker image rm dailyRoutine:latest || true
          docker load -i /home/postoffice/dailyRoutine/dailyRoutine.tar
          docker run -d -p 32468:8080 --name dailyRoutine-test dailyRoutine:latest
